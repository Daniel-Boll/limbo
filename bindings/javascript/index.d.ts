/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface Options {
  readonly: boolean
  fileMustExist: boolean
  timeout: number
}
export declare class Database {
  memory: boolean
  readonly: boolean
  inTransaction: boolean
  open: boolean
  name: string
  constructor(path: string, options?: Options | undefined | null)
  prepare(sql: string): Statement
  transaction(): void
  pragma(): void
  backup(): void
  serialize(): void
  function(): void
  aggregate(): void
  table(): void
  loadExtension(): void
}
export declare class Statement {
  database: Database
  source: string
  reader: boolean
  readonly: boolean
  busy: boolean
  get(): unknown
  all(): NapiResult
  run(args: Array<unknown>): void
  static iterate(): void
  static pluck(): void
  static expand(): void
  static raw(): void
  static columns(): void
  static bind(): void
}
